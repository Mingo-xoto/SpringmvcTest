<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	            http://www.springframework.org/schema/rabbit
	           	http://www.springframework.org/schema/rabbit/spring-rabbit-1.7.xsd">
	<!-- 分解配置 jdbc.properites -->
	<context:property-placeholder
		location="classpath:jdbc.properties,classpath:rabbitmq.properties" />

	<import resource="classpath:comsumer.xml" />
	<import resource="classpath:producer.xml" />

	<bean id="sqlserverDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="clone">
		<property name="driverClassName" value="${jdbc.sqlserver.drivers}" />
		<property name="url" value="${jdbc.sqlserver.url}" />
		<property name="username" value="${jdbc.sqlserver.user}" />
		<property name="password" value="${jdbc.sqlserver.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}"></property>
	</bean>

	<bean id="mysqlDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="clone">
		<property name="driverClassName" value="${jdbc.mysql.drivers}" />
		<property name="url" value="${jdbc.mysql.url}" />
		<property name="username" value="${jdbc.mysql.user}" />
		<property name="password" value="${jdbc.mysql.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}"></property>
	</bean>

	<bean id="multipleDataSource" class="com.yhq.multiDataSource.MultipleDataSource">
		<property name="defaultTargetDataSource" ref="sqlserverDataSource" />
		<property name="targetDataSources">
			<map key-type="com.yhq.enumeration.DataSourcesEnum">
				<entry key="MYSQL" value-ref="mysqlDataSource" />
				<entry key="SQLSERVER" value-ref="sqlserverDataSource" />
			</map>
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multipleDataSource" />
		<!-- 加载mybatis-config.xml配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/yhq/*/mapper/*.xml"></property>
		<!-- 加载pojo实体类 -->
		<property name="typeAliasesPackage" value="com.yhq.*.pojo" />
	</bean>

	<!-- 使用MapperScannerConfigurer来帮我们自动扫描和注册Mapper接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
		<property name="basePackage" value="com.yhq.*.dao" />
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="multipleDataSource" />
	</bean>
	<context:annotation-config />
	<!-- 自动扫描 除controller外的所以组件 -->
	<context:component-scan base-package="com.yhq.**">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 启用aop -->
	<aop:aspectj-autoproxy />
</beans>